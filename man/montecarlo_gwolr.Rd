% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/montecarlo_gwolr.R
\name{montecarlo_gwolr}
\alias{montecarlo_gwolr}
\title{Monte Carlo Test for GWOLR}
\usage{
montecarlo_gwolr(
  formula,
  cordxy,
  distmethod = "euclidean",
  h,
  kernel,
  adaptive = TRUE,
  data,
  link = "probit",
  fixed_vars = NULL,
  n_permutations = 99,
  parallel = TRUE,
  core = NULL
)
}
\arguments{
\item{formula}{A model formula specifying the ordinal response and predictor variables.}

\item{cordxy}{A matrix of spatial coordinates, with columns representing X and Y.}

\item{distmethod}{A character string indicating the distance calculation method to use.
Supported options are \code{"euclidean"} (default), \code{"greatcircle"} (great-circle distance), and \code{"manhattan"} (city-block distance).}

\item{h}{Bandwidth value for the spatial weighting kernel.}

\item{kernel}{A character string specifying the kernel function used to compute spatial weights.
Options are \code{"global"}, \code{"gaussian"}, \code{"exponential"}, \code{"bisquare"}, \code{"tricube"}, and \code{"boxcar"}.}

\item{adaptive}{Logical. If \code{TRUE} (default), uses adaptive bandwidth. If \code{FALSE}, uses fixed bandwidth.}

\item{data}{A data frame containing all variables used in the model.}

\item{link}{A character string specifying the link function for the ordinal regression. Options are \code{"probit"} (default) and \code{"logit"}.}

\item{fixed_vars}{Optional. A character vector of predictor variable names to be treated as fixed (i.e., non-spatially varying) in the GWOLR model.
Default is \code{NULL}, in which case all predictors are treated as spatially varying.}

\item{n_permutations}{Integer. Number of Monte Carlo permutations to perform. Default is 99.}

\item{parallel}{Logical. If \code{TRUE} (default), enables parallel computation during the permutation procedure to improve speed.}

\item{core}{Integer. The number of CPU cores to use when \code{parallel = TRUE}.
If \code{NULL}, the number of cores is set to the total number of detected cores minus 2.}
}
\value{
A data frame with p-values for each local coefficient (excluding fixed variables, if specified), representing the statistical significance of spatial variability.
}
\description{
This function performs a Monte Carlo significance test for spatial variability of local coefficients in the Geographically Weighted Ordinal Logistic Regression (GWOLR) Model,
based on the method proposed by Dong, Nakaya, and Brunsdon (2020). This implementation also supports parallel computing to enhance computational efficiency.
}
\details{
This function follows the Monte Carlo testing procedure proposed by Dong, Nakaya, and Brunsdon (2020) for assessing spatial variability in Geographically Weighted Ordinal Logistic Regression (GWOLR) Model.

In particular, it adopts their approach for handling fixed (global) variables
â€” any variable specified in \code{fixed_vars} is excluded from the Monte Carlo test and treated as spatially stationary.

Additionally, this implementation introduces parallel computation via the \code{parallel} and \code{core} arguments
to significantly reduce computation time when conducting a large number of permutations.
}
\examples{
# This example is adapted from the demo script provided in the appendix of Dong et al. (2020).
\dontrun{
#if (require("gstat")){
  # Simulate spatial coordinates
  cordx<- seq(100, 199, 10)
  cordy <- seq(200, 299, 10)
  coords <- expand.grid(cordx, cordy)
  cordxy <- as.matrix(coords)
  n.total <- nrow(coords) # 100

  g.dummy <- gstat(formula = z ~ 1, locations = ~Var1 + Var2, dummy = TRUE,
                   beta = 0, model = vgm(psill = 1, model = "Exp", range = 50), nmax = 20)
  sim <- predict(g.dummy, newdata = coords, nsim = 2)

  # Generate spatially varying coefficients
  coe_x1 <- sim$sim1 - mean(sim$sim1)
  coe_x2 <- sim$sim2 - mean(sim$sim2)
  coe_mat <- cbind(coe_x1, coe_x2)

  # Generate independent variables
  X <- matrix(runif(2 * n.total, min = 1, max = 10), n.total)
  colnames(X) <- c("x1", "x2")

  # Generate latent variable and ordinal response
  eta <- rowSums(X * coe_mat) + rlogis(n.total)
  cut_points <- as.numeric(quantile(eta))
  y <- as.integer(cut(eta, breaks = cut_points, include.lowest = TRUE))

  # Assemble data
  data <- data.frame(x1 = X[, 1], x2 = X[, 2], y = factor(y))
  formula <- y ~ x1 + x2

  bw <- bw_gwolr_cv(formula = formula, cordxy = cordxy, kernel = "bisquare",
                    adaptive = FALSE, data = data,
                    link = "logit", fixed_vars = NULL,
                    parallel = TRUE, core = 4)

  est <- gwolr(formula = formula, cordxy = cordxy, h = bw,
                kernel = "bisquare", adaptive = FALSE, data = data,
                link = "logit", fixed_vars = NULL, parallel = TRUE, core = 4)

   monte <- montecarlo_gwolr(formula = formula, cordxy = cordxy, h = bw,
                              kernel = "bisquare", adaptive = FALSE,
                              data = data, link = "logit", fixed_vars = NULL,
                              parallel = TRUE, core = 4)
}
}
}
\references{
Dong, G., Nakaya, T., & Brunsdon, C. (2020). Geographically weighted regression models for ordinal categorical response variables: An application to geo-referenced life satisfaction data. \emph{Computers, Environment and Urban Systems}, 80, 101428.
}
